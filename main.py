import streamlit as st
from langchain.chat_models.gigachat import GigaChat
from langchain.chains import RetrievalQA
import dotenv
import os
from services.vectorstore_connect import qdrant_vectorstore
from langchain.tools import BaseTool
from langchain.agents import (
    AgentExecutor,
    create_gigachat_functions_agent,
)
from langchain.agents.gigachat_functions_agent.base import (
    format_to_gigachat_function_messages,
)
from langchain_core.messages import AIMessage, HumanMessage, SystemMessage

try:
    dotenv.load_dotenv()
except:
    pass

GIGACHAT_API_CREDENTIALS = os.environ.get("GIGACHAT_API_CREDENTIALS")

class SearchTool(BaseTool):
    name = "search"
    description = """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.

–ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–æ–ª—å–∫–æ –¥–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã, —Ç–æ —É–∫–∞–∂–∏ {rooms_min: 2, rooms_max: 2}

–ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–æ–ª—å–∫–æ —Å—Ç—É–¥–∏–∏, —Ç–æ —É–∫–∞–∂–∏ {rooms_min: 0, rooms_max: 0}

–ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–µ—à–µ–≤–ª–µ 20 –º–∏–ª–ª–∏–æ–Ω–æ–≤, —Ç–æ —É–∫–∞–∂–∏ {price_max: 20000000}

–ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–æ–ª—å–∫–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–æ—Ä–æ–∂–µ 10 –º–∏–ª–ª–∏–æ–Ω–æ–≤, —Ç–æ —É–∫–∞–∂–∏ {price_min: 10000000}
"""
#    args_schema: Type[BaseModel] = SearchInput

    def _run(
        self,
        run_manager=None
    ) -> str:
        return "–£–∑–Ω–∞–π –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–∑–æ–≤–∏ —Ñ—É–Ω–∫—Ü–∏—é call_manager —Å–Ω–æ–≤–∞"

giga = GigaChat(credentials=GIGACHAT_API_CREDENTIALS,
                scope='GIGACHAT_API_CORP', 
                verify_ssl_certs=False,
                #model="GigaChat-Plus",
                profanity_check=False,
                #streaming=True
                )

tools = [SearchTool()]
agent = create_gigachat_functions_agent(giga, tools)

# AgentExecutor —Å–æ–∑–¥–∞–µ—Ç —Å—Ä–µ–¥—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∞–≥–µ–Ω—Ç
agent_executor = AgentExecutor(
    agent=agent, tools=tools, verbose=False, return_intermediate_steps=False
)
system = f"""–¢—ã –∞–≥–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –ñ–ö Life –í–∞—Ä—à–∞–≤—Å–∫–∞—è.
–£ —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Ç—ã –¥–æ–ª–∂–µ–Ω –ø–æ–º–æ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –ø–æ–¥ –µ–≥–æ –∑–∞–ø—Ä–æ—Å—ã.
–ì–æ–≤–æ—Ä–∏ —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –±—ã–ª–æ —Å–æ–æ–±—â–µ–Ω–æ —Ç–µ–±–µ –≤ –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞.
–¢—ã –¥–æ–ª–∂–µ–Ω –ø–æ–º–æ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –Ω–µ—ë.
–ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –ø–æ–∫—É–ø–∫–æ–π, —Ç–æ —Ç—ã –¥–æ–ª–∂–µ–Ω –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞ –Ω–∏–º –∫–≤–∞—Ä—Ç–∏—Ä—É —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ book_flat.

–¢–∞–∫–∂–µ —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
–î–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π book_flat
–î–ª—è –ø–æ–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä –∏—Å–ø–æ–ª—å–∑—É–π search
–î–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º call_manager
–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏–ø–æ—Ç–µ–∫–∏ –ø–æ –∫–≤–∞—Ä—Ç–∏—Ä–µ loan_calculator

–ü–µ—Ä–µ–¥ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º —É–∑–Ω–∞–π —É —á–µ–ª–æ–≤–µ–∫–∞ –µ–≥–æ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω, –Ω–µ –ø—ã—Ç–∞–π—Å—è –∏—Ö –ø—Ä–∏–¥—É–º–∞—Ç—å

–ü–æ—Å–ª–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏–ø–æ—Ç–µ–∫—É. –ï—Å–ª–∏ –æ–Ω —Å–æ–≥–ª–∞—Å–∏—Ç—Å—è –∏ –ø–µ—Ä–µ–¥–∞—Å—Ç —Ç–µ–±–µ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ç–æ –≤—ã–ø–æ–ª–Ω–∏ —Ä–∞—Å—á–µ—Ç.

–ù–µ –ø–∏—à–∏ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
–ë–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –∏–∑ –¥–∏–∞–ª–æ–≥–∞, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ —Å–æ–æ–±—â–∏–ª —Ç–µ–±–µ –∏—Ö. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –¥–∞–Ω–Ω—ã–µ —Å–∞–º.
–ï—Å–ª–∏ –∫–∞–∫–∏—Ö-—Ç–æ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç–æ –Ω—É–∂–Ω–æ —Å–ø—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–í–æ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –ñ–ö
"""  # noqa
chat_history = [SystemMessage(content=system)]

#qa = RetrievalQA.from_llm(llm=giga, retriever=qdrant_vectorstore.as_retriever())

with st.sidebar:
    "–û—Ç–≤–µ—Ç—ã –æ—Ç —á–∞—Ç-–±–æ—Ç–∞ –Ω–æ—Å—è—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä."

    "–û—Ç–≤–µ—Ç—ã –æ—Ç –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –≤—Ä–∞—á–µ–±–Ω–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π, –ª—É—á—à–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –º–µ–¥. –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é."

st.title("üí¨ –ú–µ–¥ —á–∞—Ç-–±–æ—Ç")
if "messages" not in st.session_state:
    st.session_state["messages"] = [{"role": "assistant", "content": "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–µ–¥ —á–∞—Ç-–±–æ—Ç"}]

for msg in st.session_state.messages:
    st.chat_message(msg["role"]).write(msg["content"])

if question := st.chat_input():
    st.session_state.messages.append({"role": "user", "content": question})
    st.chat_message("user").write(question)
    #result = qa(question)
    result = agent_executor.invoke(
        {
            "chat_history": chat_history,
            "input": question,
        }
    )
    #result = giga(st.session_state["messages"])
    msg = result['result']
    st.session_state.messages.append({"role": "assistant", "content": msg})
    st.chat_message("assistant").write(msg)